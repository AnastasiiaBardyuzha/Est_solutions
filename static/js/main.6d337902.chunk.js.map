{"version":3,"sources":["components/Nav/Nav.tsx","components/Home/Home.tsx","components/News/News.tsx","components/Page404/Page404.tsx","api_helpers.ts","redux/actionCreators.ts","redux/constants.ts","components/NewsList/NewsList.tsx","components/ErrorMes/ErrorMes.tsx","components/Login/Login.tsx","components/Profile/Profile.tsx","components/Subscription/Subscription.tsx","redux/store.ts","index.tsx","App.tsx"],"names":["Nav","connect","state","isLogged","className","to","exact","Home","src","alt","News","news","title","description","url","urlToImage","href","Page404","history","useHistory","type","onClick","push","getData","a","fetch","response","json","setNews","currentNews","newsList","setIsLogged","status","setHasErrorMes","hasErrorMes","mapDispatchToProps","showNews","dispatch","getNews","then","data","articles","catch","error","console","log","hasError","NewsList","useEffect","map","item","key","changeErrorMes","ErrorMes","role","changeIsLogged","handleUserName","name","userName","handlePasswrd","password","Login","onSubmit","event","preventDefault","htmlFor","id","required","value","onChange","target","replace","pas","Profile","Subscription","localStorage","getItem","JSON","parse","setItem","stringify","basename","path","component","render","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6d337902.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { State } from '../../redux/store';\n\ninterface StateProps {\n  isLogged: boolean;\n}\n\nexport const NavTemplate: FC<StateProps> = ({ isLogged }) => (\n  <nav>\n    <ul className=\"nav nav-pills nav-fill\">\n      <li className=\"nav-item\">\n        <NavLink to=\"/\" exact className=\"nav-link\">\n            Home\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/news\" className=\"nav-link\">\n            News\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/profile\" className=\"nav-link\">\n            Profile\n        </NavLink>\n      </li>\n      {\n        !isLogged && (\n          <li className=\"nav-item\">\n            <NavLink to=\"/login\" className=\"nav-link\">\n                Login\n            </NavLink>\n          </li>\n        )\n      }\n    </ul>\n  </nav>\n);\n\nconst mapStateToProps = (state: State) => ({\n  isLogged: state.isLogged,\n});\n\nexport const Nav = connect(\n  mapStateToProps,\n)(NavTemplate);\n","import React, { FC } from 'react';\nimport './Home.css';\n\nexport const Home: FC = () => (\n  <div className=\"home_wrapper\">\n    <img src=\"img/home.jpg\" alt=\"Home\" className=\"home_img\" />\n  </div>\n);\n","import React, { FC } from 'react';\nimport { Article } from '../../types';\nimport './News.css';\n\ninterface Props {\n  news: Article;\n}\n\nexport const News: FC<Props> = ({ news }) => {\n  const {\n    title,\n    description,\n    url,\n    urlToImage,\n  } = news;\n\n  return (\n    <div className=\"card card-size\">\n      <img src={urlToImage} className=\"card-img-top\" alt={title} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text\">{description}</p>\n        <a href={url} className=\"btn btn-primary btn-position\">Go to read</a>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Page404.css';\n\nexport const Page404: FC = () => {\n  const history = useHistory();\n\n  return (\n    <div className=\"page404_wrapper\">\n      <div className=\"page404_content\">\n        <span className=\"title_404\">\n          404. Page Not Found.\n        </span>\n        <div className=\"text_404\">\n          <span>\n            There's a lot of reasons why this page is 404.\n             Don't waste your time enjoying the look of it.\n          </span>\n          <br />\n          <span>\n            You could return to the homepage or search using the search box below.\n          </span>\n        </div>\n        <div className=\"page404_btn\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => history.push('/')}\n          >\n          Take me home\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const API_NEWS = 'https://newsapi.org/v2/top-headlines?sources=bbc-news&apiKey=54d7035315ac4ea9a1a10cc43d923af5';\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n","import { Dispatch } from 'redux';\nimport {\n  SET_NEWS,\n  SET_HAS_ERROR,\n  SET_USER_NAME,\n  SET_PASSWORD,\n  SET_IS_LOGGED,\n  SET_ERROR_MES,\n} from './constants';\nimport { Article } from '../types';\nimport { getData, API_NEWS } from '../api_helpers';\n\nexport const setNews = (currentNews: Article[]) => ({\n  type: SET_NEWS,\n  newsList: currentNews,\n});\n\nexport const setHasError = (status: boolean) => ({\n  type: SET_HAS_ERROR,\n  hasError: status,\n});\n\nexport const setUserName = (name: string) => ({\n  type: SET_USER_NAME,\n  userName: name,\n});\n\nexport const setPassword = (password: string | number) => ({\n  type: SET_PASSWORD,\n  password,\n});\n\nexport const setIsLogged = (status: boolean) => ({\n  type: SET_IS_LOGGED,\n  isLogged: status,\n});\n\nexport const setHasErrorMes = (status: boolean) => ({\n  type: SET_ERROR_MES,\n  hasErrorMes: status,\n});\n\n\nexport const showNews = () => async (dispatch: Dispatch) => {\n  const getNews = () => {\n    return getData(`${API_NEWS}`);\n  };\n\n  const currentNews = getNews();\n\n  currentNews.then(data => {\n    const { articles } = data;\n\n    dispatch(setNews(articles));\n  })\n    .catch(error => {\n      console.log(error);\n\n      dispatch(setHasError(true));\n    });\n};\n","export const SET_NEWS = 'SET_NEWS';\nexport const SET_HAS_ERROR = 'SET_HAS_ERROR';\nexport const SET_USER_NAME = 'SET_USER_NAME';\nexport const SET_PASSWORD = 'SET_PASSWORD';\nexport const SET_IS_LOGGED = 'SET_IS_LOGGED';\nexport const SET_ERROR_MES = 'SET_ERROR_MES';\n","import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { News } from '../News/News';\nimport { Page404 } from '../Page404/Page404';\nimport { Article } from '../../types';\nimport { State } from '../../redux/store';\nimport { showNews as loadNews } from '../../redux/actionCreators';\nimport './NewsList.css';\n\ninterface StateProps {\n  newsList: Article[];\n  hasError: boolean;\n  showNews: () => void;\n}\n\ntype Props = StateProps;\n\nexport const NewsListTemp: FC<Props> = ({ showNews, newsList, hasError }) => {\n  useEffect(() => {\n    showNews();\n  }, []);\n\n  if (hasError) {\n    return <Page404 />;\n  }\n\n  return (\n    <div className=\"news_wrapper\">\n      {newsList && newsList.map(item => <News key={item.title} news={item} />)}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  newsList: state.newsList,\n  hasError: state.hasError,\n});\n\nconst mapDispatchToProps = {\n  showNews: loadNews,\n};\n\n\nexport const NewsList = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NewsListTemp);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { setHasErrorMes } from '../../redux/actionCreators';\n\nimport './ErrorMes.css';\n\ninterface Methods {\n  changeErrorMes: (status: boolean) => void;\n}\n\nexport const ErrorMesTemp: FC<Methods> = ({ changeErrorMes }) => (\n  <div className=\"error_wrapper\">\n    <div className=\"alert alert-secondary\" role=\"alert\">\n      The username or password you entered is incorrect\n      <div className=\"alert_btn\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => changeErrorMes(false)}\n        >\n            Primary\n        </button>\n      </div>\n    </div>\n  </div>\n\n);\n\n\nconst mapDispatchToProps = {\n  changeErrorMes: setHasErrorMes,\n};\n\nexport const ErrorMes = connect(\n  null,\n  mapDispatchToProps,\n)(ErrorMesTemp);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  setUserName,\n  setPassword,\n  setIsLogged,\n  setHasErrorMes,\n} from '../../redux/actionCreators';\nimport { ErrorMes } from '../ErrorMes/ErrorMes';\nimport { State } from '../../redux/store';\n\nimport './Login.css';\n\ninterface StateProps {\n  hasErrorMes: boolean;\n  userName: string;\n  password: string | number;\n}\n\ninterface Methods {\n  changeIsLogged: (status: boolean) => void;\n  changeErrorMes: (status: boolean) => void;\n  handleUserName: (name: string) => void;\n  handlePasswrd: (password: string | number) => void;\n}\n\ntype Props = StateProps & Methods;\n\nexport const LoginTemplate: FC<Props> = ({\n  userName,\n  password,\n  hasErrorMes,\n  changeIsLogged,\n  changeErrorMes,\n  handleUserName,\n  handlePasswrd,\n}) => {\n  const handleChangeLogin = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: name } = event.target;\n\n    handleUserName(name.replace(/\\s/, ''));\n  };\n\n  const handleChangePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: pas } = event.target;\n\n    handlePasswrd(pas.replace(/\\s/, ''));\n  };\n\n  const chackedLogin = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (password === '12345' && userName === 'admin') {\n      changeIsLogged(true);\n      handleUserName('');\n      handlePasswrd('');\n    } else {\n      changeErrorMes(true);\n    }\n  };\n\n  if (hasErrorMes) {\n    return <ErrorMes />;\n  }\n\n  return (\n    <>\n      <div className=\"login_wrapper\">\n        <form onSubmit={chackedLogin}>\n          <label\n            htmlFor=\"inputUserName\"\n            className=\"col-form-label input-size\"\n          >\n            Username\n            <input\n              type=\"text\"\n              id=\"inputUserName\"\n              className=\"form-control\"\n              required\n              value={userName}\n              onChange={handleChangeLogin}\n            />\n          </label>\n          <label\n            htmlFor=\"inputPassword\"\n            className=\"col-form-label input-size\"\n          >\n            Password\n            <input\n              type=\"password\"\n              id=\"inputPassword\"\n              className=\"form-control\"\n              required\n              value={password}\n              onChange={handleChangePassword}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary btn_form\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  hasErrorMes: state.hasErrorMes,\n  userName: state.userName,\n  password: state.password,\n});\n\nconst mapDispatchToProps = {\n  changeIsLogged: setIsLogged,\n  handleUserName: setUserName,\n  handlePasswrd: setPassword,\n  changeErrorMes: setHasErrorMes,\n};\n\n\nexport const Login = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoginTemplate);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport './Profile.css';\nimport { State } from '../../redux/store';\nimport { setIsLogged } from '../../redux/actionCreators';\n\ninterface StateProps {\n  isLogged: boolean;\n  changeIsLogged: (status: boolean) => void;\n}\n\nexport const ProfileTemplate: FC<StateProps> = ({ isLogged, changeIsLogged }) => (\n  <>\n    {\n      isLogged && (\n        <div className=\"profile_wrapper\">\n          <h1 className=\"profile_title\">Some text</h1>\n          <p>\n          Lorem ipsum dolor sit amet consectetur,\n          adipisicing elit. Recusandae eveniet quo quam,\n          dolores autem omnis obcaecati porro eligendi vitae officiis?\n          Odit molestiae dolorum obcaecati dolore, id doloribus et rerum eos!\n          </p>\n          <p>\n          Lorem ipsum dolor sit amet consectetur,\n          adipisicing elit. Recusandae eveniet quo quam,\n          dolores autem omnis obcaecati porro eligendi vitae officiis?\n          Odit molestiae dolorum obcaecati dolore, id doloribus et rerum eos!\n          </p>\n          <p>\n          Lorem ipsum dolor sit amet consectetur,\n          adipisicing elit. Recusandae eveniet quo quam,\n          dolores autem omnis obcaecati porro eligendi vitae officiis?\n          Odit molestiae dolorum obcaecati dolore, id doloribus et rerum eos!\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet consectetur,\n          adipisicing elit. Recusandae eveniet quo quam,\n          dolores autem omnis obcaecati porro eligendi vitae officiis?\n          Odit molestiae dolorum obcaecati dolore, id doloribus et rerum eos!\n          </p>\n          <p>\n          Lorem ipsum dolor sit amet consectetur,\n          adipisicing elit. Recusandae eveniet quo quam,\n          dolores autem omnis obcaecati porro eligendi vitae officiis?\n          Odit molestiae dolorum obcaecati dolore, id doloribus et rerum eos!\n          </p>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={() => changeIsLogged(false)}\n          >\n            Sign Out\n          </button>\n        </div>\n      )\n    }\n  </>\n);\n\nconst mapStateToProps = (state: State) => ({\n  isLogged: state.isLogged,\n});\n\nconst mapDispatchToProps = {\n  changeIsLogged: setIsLogged,\n};\n\nexport const Profile = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ProfileTemplate);\n","import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { Nav } from '../Nav/Nav';\nimport { Home } from '../Home/Home';\nimport { NewsList } from '../NewsList/NewsList';\nimport { Login } from '../Login/Login';\nimport { Profile } from '../Profile/Profile';\nimport { State } from '../../redux/store';\nimport { setIsLogged } from '../../redux/actionCreators';\n\ninterface StateProps {\n  isLogged: boolean;\n  changeIsLogged: (status: boolean) => void;\n}\n\nexport const SubscriptionTemplate: FC<StateProps> = ({ isLogged, changeIsLogged }) => {\n  useEffect(() => {\n    const data = localStorage.getItem('isLogged');\n\n    if (data) {\n      changeIsLogged(JSON.parse(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('isLogged', JSON.stringify(isLogged));\n  });\n\n  return (\n    <>\n      <Router basename=\"/Est_solutions\">\n        <Nav />\n        <main className=\"main\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/news\" exact component={NewsList} />\n            <Route path=\"/login\" exact render={() => (!isLogged ? <Login /> : <Redirect to=\"/profile\" />)} />\n            <Route path=\"/profile\" exact render={() => (isLogged ? <Profile /> : <Redirect to=\"/login\" />)} />\n          </Switch>\n        </main>\n      </Router>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  isLogged: state.isLogged,\n});\n\nconst mapDispatchToProps = {\n  changeIsLogged: setIsLogged,\n};\n\n\nexport const Subscription = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SubscriptionTemplate);\n","import { createStore, AnyAction, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {\n  SET_NEWS,\n  SET_HAS_ERROR,\n  SET_USER_NAME,\n  SET_PASSWORD,\n  SET_IS_LOGGED,\n  SET_ERROR_MES,\n} from './constants';\nimport { Article } from '../types';\n\nexport interface State {\n  isLogged: boolean;\n  hasError: boolean;\n  newsList: Article[];\n  userName: string;\n  password: string | number;\n  hasErrorMes: boolean;\n}\n\nconst initialState = {\n  isLogged: false,\n  hasError: false,\n  newsList: [],\n  userName: '',\n  password: '',\n  hasErrorMes: false,\n};\n\nexport const reduser = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_NEWS:\n      return {\n        ...state,\n        newsList: action.newsList,\n      };\n\n    case SET_HAS_ERROR:\n      return {\n        ...state,\n        hasError: action.hasError,\n      };\n\n    case SET_USER_NAME:\n      return {\n        ...state,\n        userName: action.userName,\n      };\n\n    case SET_PASSWORD:\n      return {\n        ...state,\n        password: action.password,\n      };\n\n    case SET_IS_LOGGED:\n      return {\n        ...state,\n        isLogged: action.isLogged,\n      };\n\n    case SET_ERROR_MES:\n      return {\n        ...state,\n        hasErrorMes: action.hasErrorMes,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reduser, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n","import React, { FC } from 'react';\nimport { Provider } from 'react-redux';\nimport { Subscription } from './components/Subscription/Subscription';\nimport { store } from './redux/store';\nimport './App.css';\n\nexport const App: FC = () => (\n  <div className=\"wrapper\">\n    <Provider store={store}>\n      <Subscription />\n    </Provider>\n  </div>\n);\n"],"sourceRoot":""}